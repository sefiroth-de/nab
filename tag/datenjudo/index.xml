<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Datenjudo | Norman&#39;s Academic Blog</title>
    <link>https://sefiroth.net/nab/tag/datenjudo/</link>
      <atom:link href="https://sefiroth.net/nab/tag/datenjudo/index.xml" rel="self" type="application/rss+xml" />
    <description>Datenjudo</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>de-de</language><copyright>© in 2017-2021 by Norman Markgraf</copyright><lastBuildDate>Sun, 27 Jun 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://sefiroth.net/nab/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Datenjudo</title>
      <link>https://sefiroth.net/nab/tag/datenjudo/</link>
    </image>
    
    <item>
      <title>Datenjudo für Fragebögen </title>
      <link>https://sefiroth.net/nab/post/datenjudo-fur-fragebogen/</link>
      <pubDate>Sun, 27 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://sefiroth.net/nab/post/datenjudo-fur-fragebogen/</guid>
      <description>
&lt;script src=&#34;https://sefiroth.net/nab/post/datenjudo-fur-fragebogen/index.de_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Ab und zu bekomme ich die Frage, wie man einen Fragebogen mit Likert-Scalen-Items auswerten kann.&lt;/p&gt;
&lt;p&gt;Dazu kann etwas gezieltes Datenjudo helfen. Wir schauen uns das folgende generierte Mini-Beispiel an:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(mosaic)  # Basis Paket
library(tibble)  # Eine modernere Variante der data.frames!
set.seed(2009)   # Reproduzierbarkeit

N &amp;lt;- 25  # Anzahl der Testzeileneinträge in den &amp;quot;testdaten&amp;quot;!

# Wir wollen eine Likert-Scale 
minLikert &amp;lt;- 1  # bis
maxLikert &amp;lt;- 6  # erstellen.

# Für den Zufallszahlengenerator:
maxRnd &amp;lt;- maxLikert + 0.99

# Zum späteren Umrechnen der inversen Items:
maxInvItem &amp;lt;- maxLikert + 1

# Wir bauen uns eine Testumfrage mit zwei Itemserien 
# (AS1-AS6 und BS1-BS6) und N Beobachtungen.
# Die Items AS3, AS4  und BS1 und BS5 sind dabei 
# inverse Items, welche später umgerechnet werden:
testdaten &amp;lt;- tibble(
    ID = 1:N,
    # AS1-AS6 bilden ein Itemset:
    AS1 = trunc(runif(N, min = minLikert, max = maxLikert)),
    AS2 = trunc(runif(N, min = minLikert, max = maxLikert)),
    AS3 = trunc(runif(N, min = minLikert, max = maxLikert)),
    AS4 = trunc(runif(N, min = minLikert, max = maxLikert)),
    AS5 = trunc(runif(N, min = minLikert, max = maxLikert)),
    AS6 = trunc(runif(N, min = minLikert, max = maxLikert)),
    # BS1-BS5 bilden ein Itemset:
    BS1 = trunc(runif(N, min = minLikert, max = maxLikert)),
    BS2 = trunc(runif(N, min = minLikert, max = maxLikert)),
    BS3 = trunc(runif(N, min = minLikert, max = maxLikert)),
    BS4 = trunc(runif(N, min = minLikert, max = maxLikert)),
    BS5 = trunc(runif(N, min = minLikert, max = maxLikert)),
    # Geschlecht als sex mit (1 für Frauen und 2 für Männer)
    sex = trunc(runif(N, min = 1, max = 2.99))
)

# Orinal testdaten einmal ausgeben:
head(testdaten)
#&amp;gt; # A tibble: 6 x 13
#&amp;gt;      ID   AS1   AS2   AS3   AS4   AS5   AS6   BS1   BS2   BS3   BS4   BS5   sex
#&amp;gt;   &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
#&amp;gt; 1     1     1     1     5     4     2     1     1     5     5     1     3     1
#&amp;gt; 2     2     4     4     1     5     2     2     1     2     2     3     1     2
#&amp;gt; 3     3     4     1     5     2     4     2     1     1     3     2     4     2
#&amp;gt; 4     4     1     3     3     4     4     2     4     1     5     1     2     1
#&amp;gt; 5     5     3     2     2     2     1     5     1     3     4     5     4     2
#&amp;gt; 6     6     1     1     1     3     3     5     3     4     3     1     2     1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Die Spalten AS3, AS4 und BS1, BS5 waren inverse Items, die wir noch umrechnen müssen:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Inverse Item umrechnen:
testdaten %&amp;gt;%
    mutate(
        AS3 = maxInvItem - AS3,
        AS4 = maxInvItem - AS4,
        BS1 = maxInvItem - BS1,
        BS5 = maxInvItem - BS5
    ) -&amp;gt; testdaten_korrigiert 

# Die Daten mit den umgerechnetern inversen Items:
head(testdaten_korrigiert)
#&amp;gt; # A tibble: 6 x 13
#&amp;gt;      ID   AS1   AS2   AS3   AS4   AS5   AS6   BS1   BS2   BS3   BS4   BS5   sex
#&amp;gt;   &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
#&amp;gt; 1     1     1     1     2     3     2     1     6     5     5     1     4     1
#&amp;gt; 2     2     4     4     6     2     2     2     6     2     2     3     6     2
#&amp;gt; 3     3     4     1     2     5     4     2     6     1     3     2     3     2
#&amp;gt; 4     4     1     3     4     3     4     2     3     1     5     1     5     1
#&amp;gt; 5     5     3     2     5     5     1     5     6     3     4     5     3     2
#&amp;gt; 6     6     1     1     6     4     3     5     4     4     3     1     5     1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Die jeweiligen Itemsets werden nun zur einem Wert (Gesamtscore)
zusammengefasst, in dem wir jeweils den Mittelwert von &lt;code&gt;AS1&lt;/code&gt;-&lt;code&gt;AS6&lt;/code&gt;
und &lt;code&gt;BS1&lt;/code&gt;-&lt;code&gt;BS5&lt;/code&gt; bildenund in &lt;code&gt;AS&lt;/code&gt; bzw. &lt;code&gt;BS&lt;/code&gt; speichern:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Wir fassen nun die AS1-AS6 und die BS1-BS5 zusammen 
# und bilden die jeweiligen Mittelwerte:
testdaten_korrigiert %&amp;gt;%
    group_by(ID, sex) %&amp;gt;%  # Damit wird für jede Zeile die Zusammenfassung gemacht!
    summarise(
        AS = mean(c(AS1, AS2, AS3, AS4, AS5, AS6)),
        BS = mean(c(BS1, BS2, BS3, BS4, BS5))
    ) -&amp;gt; testdaten_sum

# Ausgabe der Mittelwerte der AS und BS
head(testdaten_sum)
#&amp;gt; # A tibble: 6 x 4
#&amp;gt; # Groups:   ID [6]
#&amp;gt;      ID   sex    AS    BS
#&amp;gt;   &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
#&amp;gt; 1     1     1  1.67   4.2
#&amp;gt; 2     2     2  3.33   3.8
#&amp;gt; 3     3     2  3      3  
#&amp;gt; 4     4     1  2.83   3  
#&amp;gt; 5     5     2  3.5    4.2
#&amp;gt; 6     6     1  3.33   3.4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Die Datentabelle &lt;code&gt;testdaten_sum&lt;/code&gt; enthält nun die Spalten &lt;code&gt;AS&lt;/code&gt; und &lt;code&gt;BS&lt;/code&gt; mit den entsprechenden Mittelwerten der einzelnen Items &lt;code&gt;AS1&lt;/code&gt;-&lt;code&gt;AS6&lt;/code&gt; sowieso &lt;code&gt;BS1&lt;/code&gt;- &lt;code&gt;BS5&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Wir wollen nun die Ergebnisse als Boxplots anzeigen lassen. Dafür benennen wir die Geschlechter von 1,2 auf “Frau”, “Mann” um:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;testdaten_sum %&amp;gt;%
    mutate(sex = factor(sex, levels = c(1, 2),
                             labels = c(&amp;quot;Frau&amp;quot;, &amp;quot;Mann&amp;quot;))
    ) -&amp;gt; testdaten_sex &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nun können wir die Boxplots erstellen:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Darstellung der Ergebnisse als Boxplot AS ~ sex:
gf_boxplot(AS ~ sex, data = testdaten_sex) %&amp;gt;%
    gf_labs(
        title = &amp;quot;Boxplot von AS nach Geschlechtern&amp;quot;,
        x = &amp;quot;Geschlechter&amp;quot;,
        y = &amp;quot;Item AS&amp;quot;
    ) %&amp;gt;%
  gf_refine(
    scale_y_continuous(
      breaks = 1:6, 
      label = 1:6,
      limits = c(2.5, 4.5)  # Gibt den Bereich von 2.5 bis 4.5 aus!
    )  
  )

# Darstellung der Ergebnisse als Boxplot BS ~ sex:
gf_boxplot(BS ~ sex, data = testdaten_sex) %&amp;gt;%
    gf_labs(
        title = &amp;quot;Boxplot von BS nach Geschlechtern&amp;quot;,
        x = &amp;quot;Geschlechter&amp;quot;,
        y = &amp;quot;Item BS&amp;quot;
    ) %&amp;gt;%
  gf_refine(
    scale_y_continuous(
      breaks = 1:6, 
      label = 1:6,
      limits = c(1, 6)  # GIbt den ganzen Bereich von 1 bis 6 aus!
    )  
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://sefiroth.net/nab/post/datenjudo-fur-fragebogen/index.de_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;90%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;img src=&#34;https://sefiroth.net/nab/post/datenjudo-fur-fragebogen/index.de_files/figure-html/unnamed-chunk-5-2.png&#34; width=&#34;90%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Die Kennzahlen dazu erhalten wir mit &lt;code&gt;favstats&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;favstats(AS ~ sex, data = testdaten_sex)[1:6]
#&amp;gt;    sex      min    Q1   median       Q3      max
#&amp;gt; 1 Frau 1.666667 2.625 3.333333 3.666667 4.000000
#&amp;gt; 2 Mann 3.000000 3.000 3.333333 3.500000 3.833333
favstats(BS ~ sex, data = testdaten_sex)[1:6]
#&amp;gt;    sex min  Q1 median  Q3 max
#&amp;gt; 1 Frau 2.6 3.2    3.6 4.0 4.2
#&amp;gt; 2 Mann 2.2 2.8    3.0 3.8 4.2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Voilà!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
